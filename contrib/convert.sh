#!/usr/bin/env bash
set -euo pipefail
shopt -s extglob
current_dir=$(pwd)
# create a temporary directory to clone the repository
# this will be used to check out the repository and execute
# the build process
tmpdir=$(mktemp -d)
cursor_path="$tmpdir"/cursors

palette=("Frappe" "Latte" "Macchiato" "Mocha")
color=("Blue" "Dark" "Flamingo" "Green" "Lavender" "Light" "Maroon" "Mauve" "Peach" "Pink" "Red" "Rosewater" "Sapphire" "Sky" "Teal" "Yellow")

VARIANT="Mocha-Dark"
NAMED="hyprcursor"
ANIMRATE="50"
CURSORDIR="$cursor_path"
ANIMONE="wait"
ANIMTWO="progress"

print_green() {
	echo -en "\e[32m$1\e[0m"
}

helpme() {
	print_green "Usage: $0 [-v variant] [-n name] [-r rate] [-d dir] [-a anim-one] [-b anim-two]\n"
	echo '                /ᐠ 、     '
	echo '             ミ(˚. 。*フ  '
	echo '               |   ˜〵    '
	echo '               しし._)ノ  '
	echo ""
	echo "  -v Set the variant (default: Mocha-Dark)"
	echo "  -n Theme name (default: hyprcursor)"
	echo "  -r Animation rate (default: 50)"
	echo "  -d Set cursor directory (recommend not touching this)"
	echo "  -a 1st animation (default: wait)"
	echo "  -b 2nd animation (default: progress)"
	exit 1
}

while getopts ":v:n:r:d:a:b:h" opt; do
	case ${opt} in
	v)
		VARIANT="$OPTARG"
		;;
	n)
		NAMED="$OPTARG"
		;;
	r)
		ANIMRATE="$OPTARG"
		;;
	d)
		CURSORDIR="$OPTARG"
		;;
	a)
		ANIMONE="$OPTARG"
		;;
	b)
		ANIMTWO="$OPTARG"
		;;
	h)
		helpme
		;;
	\?)
		echo "Invalid option: $OPTARG" 1>&2
		exit 1
		;;
	:)
		echo "Option -$OPTARG requires an argument." 1>&2
		exit 1
		;;
	esac
done
shift $((OPTIND - 1))

if ! [[ "$ANIMRATE" =~ ^[0-9]+$ ]]; then
	print_green "\e[31mError: ANIMRATE argument is missing or not an integer. Defaulting to 50.\e[0m\n" >&2
	ANIMRATE="50"
fi

result_array=() # initialize results array

for item in "${palette[@]}"; do
	for col in "${color[@]}"; do
		result="${item}-${col}"
		result_array+=("$result")
	done
done

# Check if the string is an element of the result array
VARIANT_MATCH=false
for valid_variant in "${result_array[@]}"; do
	if [[ "${valid_variant,,}" == "${VARIANT,,}" ]]; then
		VARIANT_MATCH=true
		break
	fi
done

if ! $VARIANT_MATCH; then
	print_green "Invalid variant provided: $VARIANT\n"
	print_green "Valid palettes: ${palette[*]}\n" >&2
	print_green "Valid colors: ${color[*]}\n" >&2
	exit 1
fi

# Sparsely check out to the repository
# specifically to the src/ directory where
# vector (svg) versions of the Catppuccin cursors
# are located
git clone --depth=1 --filter=blob:none --sparse https://github.com/catppuccin/cursors "$cursor_path"
cd "$cursor_path" || exit
git sparse-checkout init --cone
git sparse-checkout set src/

print_green "Cloned repository at $tmpdir/cursors\n"
print_green "Building in temporary directory: $tmpdir\n"

if [ ! -d "$CURSORDIR" ]; then
	echo "Error: Directory '$CURSORDIR' does not exist."
	exit 1
fi

if [ -f "$CURSORDIR/manifest.hl" ]; then
	print_green "Error: $CURSORDIR already has a manifest.hl file.\n"
	exit 1
fi

# prepare directory, remove any extraneous files

echo -en "Step 1: Preparing directory\n"
cd "$CURSORDIR"/src/Catppuccin-"$VARIANT"-Cursors || exit
mkdir -p cursors "$ANIMONE" "$ANIMTWO" || exit # if mkdir fails for any reason, exit early
mv -v "$ANIMONE"-* "$ANIMONE"
mv -v "$ANIMTWO"-* "$ANIMTWO"

# create a containing folder with name of icon
echo -en "Step 2: Creating folders\n"
rm *_24.svg
for file in *.svg; do
	file_contents="
    resize_algorithm = bilinear
    define_size = 64, $file
    "
	direct="${file%.svg}"
	mkdir -- "$direct"
	mv -- "$file" "$direct"
	echo "$file_contents" >"$direct"/meta.hl
done

function process_meta() {
	local ANIM="$1"
	local output=""
	for i in {1..12}; do
		output+="define_size = 64, $ANIM-$(printf "%02d" "$i").svg,$ANIMRATE\n"
	done

	echo -e "resize_algorithm = bilinear\n$output" >"$ANIM"/meta.hl
}

print_green "Step 3: Processing meta files\n"
process_meta "$ANIMONE"
process_meta "$ANIMTWO"

mv !(cursors) ./cursors
rm cursors/index.theme

# index.theme gen
echo "[Icon Theme]
Name=$NAMED
Comment=generated by hyprman
" >>index.theme

echo "name = $NAMED
description = let there be ants
version = 0.1
cursors_directory = cursors
" >>manifest.hl

hyprcursor-util --create .
print_green "Finished making $NAMED...\nCopying to $current_dir\n"

cp -r ../theme_"$NAMED" "$current_dir"/"$NAMED"
